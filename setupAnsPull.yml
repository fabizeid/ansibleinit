# ansible-pull setup
#
# on remote hosts, set up ansible to run periodically using the latest code
# from a particular checkout, in pull based fashion, inverting Ansible's
# usual push-based operating mode.
#
# This particular pull based mode is ideal for:
#
# (A) massive scale out
# (B) continual system remediation
#
# DO NOT RUN THIS AGAINST YOUR HOSTS WITHOUT CHANGING THE repo_url
# TO SOMETHING YOU HAVE PERSONALLY VERIFIED
# details for setting up remote host is in gdrive tech4leb/OS/remote setup
# ansible-playbook -v -C -i etc/ansible/hosts /media/sf_MachineLearningCourse/ansible/setupAnsPull.yml
# add -C for dryrun
# 
---

- hosts: pull_mode_hosts
#  strategy: debug 
  become: true

  vars:

    # schedule is fed directly to cron
    schedule: '*/15 * * * *'

    # User to run ansible-pull as from cron
    cron_user: root

    # File that ansible will use for logs
    logfile: /var/log/ansible-pull.log

    # Directory to where repository will be cloned
    workdir: /var/lib/ansible/local

    # Repository to check out -- YOU MUST CHANGE THIS
    # repo must contain a local.yml file at top level
    #repo_url: git://github.com/sfromm/ansible-playbooks.git
    repo_url: git://github.com/fabizeid/ansible.git
    

  tasks:
    - name: install Ansible dependencies
      apt: name=software-properties-common state=latest
      when: ansible_os_family == 'Debian'
      
    - name: add Ansible APT repository
      apt_repository: repo="ppa:ansible/ansible" state=present
      when: ansible_os_family == 'Debian'
      
    - name: install Ansible
      apt: name=ansible state=latest update_cache=yes cache_valid_time=3600
      when: ansible_os_family == 'Debian'
      
    - name: Install ansible RedHat
      yum: pkg=ansible state=installed
      when: ansible_os_family == 'RedHat'

    - name: Install git Debian
      apt: pkg=git state=installed
      when: ansible_os_family == 'Debian'

    - name: Create local directory to work from
      file: path={{workdir}} state=directory owner=root group=root mode=0751

#    - name: Copy ansible inventory file to client
#      copy: src=/etc/ansible/hosts dest=/etc/ansible/hosts
#              owner=root group=root mode=0644
#
    - name: Copy ansible inventory file to client
      copy: src=templates/hosts dest=/etc/ansible/hosts
              owner=root group=root mode=0644

    - name: Create crontab entry to clone/pull git repository
      template: src=templates/etc_cron.d_ansible-pull.j2 dest=/etc/cron.d/ansible-pull owner=root group=root mode=0644

    - name: Create logrotate entry for ansible-pull.log
      template: src=templates/etc_logrotate.d_ansible-pull.j2 dest=/etc/logrotate.d/ansible-pull owner=root group=root mode=0644